diff --git a/src/axe.c b/src/axe.c
index 2822d9b..cba50ac 100644
--- a/src/axe.c
+++ b/src/axe.c
@@ -774,6 +774,7 @@ void axe_get_signal(adapter *ad)
 		tmp = 0;
 	snr = tmp;
 	// keep the assignment at the end for the signal thread to get the right values as no locking is done on the adapter
+	adapter_lock(ad->id);
 	ad->snr = snr;
 	ad->strength = strength;
 	ad->status = status;
@@ -781,10 +782,9 @@ void axe_get_signal(adapter *ad)
 
 	if (ad->status == 0 && ((ad->tp.diseqc_param.switch_type == SWITCH_JESS) || (ad->tp.diseqc_param.switch_type == SWITCH_UNICABLE)))
 	{
-		adapter_lock(ad->id);
 		axe_setup_switch(ad);
-		adapter_unlock(ad->id);
 	}
+	adapter_unlock(ad->id);
 }
 
 void axe_commit(adapter *a)
diff --git a/src/dvb.c b/src/dvb.c
index 2da97f2..4f018ac 100644
--- a/src/dvb.c
+++ b/src/dvb.c
@@ -1565,6 +1565,7 @@ void dvb_get_signal(adapter *ad)
 		snr = 255;
 
 	// keep the assignment at the end for the signal thread to get the right values as no locking is done on the adapter
+	adapter_lock(ad->id);
 	ad->snr = snr;
 	ad->strength = strength;
 	ad->status = status;
@@ -1572,10 +1573,9 @@ void dvb_get_signal(adapter *ad)
 
 	if (ad->status == 0 && ((ad->tp.diseqc_param.switch_type == SWITCH_JESS) || (ad->tp.diseqc_param.switch_type == SWITCH_UNICABLE)))
 	{
-		adapter_lock(ad->id);
 		setup_switch(ad);
-		adapter_unlock(ad->id);
 	}
+	adapter_unlock(ad->id);
 }
 
 void dvb_commit(adapter *a)
diff --git a/src/minisatip.h b/src/minisatip.h
index 0bc83c9..80d8351 100644
--- a/src/minisatip.h
+++ b/src/minisatip.h
@@ -51,6 +51,8 @@ extern char app_name[], version[];
 		v = ((a[i + 3] & 0xFF) << 24) | ((a[i + 2] & 0xFF) << 16) | ((a[i + 1] & 0xFF) << 8) | (a[i] & 0xFF); \
 	}
 
+#define PID_FROM_TS(b) (((b)[1] & 0x1F) * 256 + (b)[2])
+
 struct struct_opts
 {
 	char *rrtp;
diff --git a/src/pmt.h b/src/pmt.h
index 06d7ac6..fb05f4c 100644
--- a/src/pmt.h
+++ b/src/pmt.h
@@ -32,7 +32,6 @@
 #define FILTER_CRC 16
 #define FILTER_EMM 32
 
-#define PID_FROM_TS(b) (((b)[1] & 0x1F) * 256 + (b)[2])
 #define MAX_PI_LEN 1500
 
 typedef struct struct_batch // same as struct dvbcsa_bs_batch_s
diff --git a/src/stream.c b/src/stream.c
index bb7f621..cc14d5a 100644
--- a/src/stream.c
+++ b/src/stream.c
@@ -1011,7 +1011,7 @@ int process_dmx(sockets *s)
 #endif
 
 	rlen = ad->rlen;
-	int packet_no_sid = check_cc(ad);
+	const int packet_no_sid = 0 /* check_cc(ad) */;
 
 	if (ad->sid_cnt == 1 && ad->master_sid >= 0 && !packet_no_sid && !ad->null_packets) // we have just 1 stream, do not check the pids, send everything to the destination
 	{
